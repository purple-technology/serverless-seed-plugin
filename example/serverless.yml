service: sls-seed-plugin-example

plugins:
  - serverless-seed-plugin
  - '@purple/serverless-s3-remover'

frameworkVersion: ^2.43.1
variablesResolutionMode: 20210326
useDotenv: true

provider:
  name: aws
  region: eu-central-1
  versionFunctions: false
  stage: staging
  runtime: nodejs12.x
  deploymentBucket:
    name: ${env:DEPLOYMENT_BUCKET}

custom:
  seed:
    dynamodb:
      TodosTable: ${file(./seed/dynamodb.yml)}
    cognito:
      TodosUserPool: ${file(./seed/cognito.yml)}
    s3:
      TodosBucket:
        - ./seed/s3
  tables:
    todos: ${self:service}-${self:provider.stage}-todos
  remover:
    buckets:
      - ${self:service}-${self:provider.stage}-todos

resources:
  Resources:
    TodosTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: ${self:custom.tables.todos}
        # PointInTimeRecoverySpecification:
        #   PointInTimeRecoveryEnabled: ${file(macros.js):isPointInTimeRecoveryEnabled}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
    TodosUserPool:
      # <<: *storageResourcePolicy
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: ${self:service}-${self:provider.stage}-todos
        MfaConfiguration: OFF
        Policies:
          PasswordPolicy:
            MinimumLength: 6
            RequireLowercase: false
            RequireNumbers: false
            RequireSymbols: false
            RequireUppercase: false
        AdminCreateUserConfig:
          AllowAdminCreateUserOnly: false
        Schema:
          - Name: mutableClientData
            AttributeDataType: String
            Mutable: true
            StringAttributeConstraints:
              MinLength: 1
              MaxLength: 2048
          - Name: immutableClientData
            AttributeDataType: String
            Mutable: false
            StringAttributeConstraints:
              MinLength: 1
              MaxLength: 2048
    TodosBucket:
      # <<: *storageResourcePolicy
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:service}-${self:provider.stage}-todos
  Outputs:
    TodosTableName:
      Value: { 'Ref': 'TodosTable' }
      Export:
        Name: ${self:service}-${self:provider.stage}-todos-table-name
    TodosTableArn:
      Value: { 'Fn::GetAtt': ['TodosTable', 'Arn'] }
      Export:
        Name: ${self:service}-${self:provider.stage}-todos-table-arn
